// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id            Int @id @default(autoincrement())
  title         String
  host          User  @relation("EventHost", fields: [hostId], references: [id])
  hostId        String
  attendees     User[] @relation("EventAttendees")
  location      String?
  time          DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  limit         Limit?
  gameType      GameType?
  blinds        Blinds?
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  username      String?         @unique    
  eventsHosted  Event[]         @relation("EventHost")
  attending     Event[]         @relation("EventAttendees")
  followedBy    User[]          @relation("UserFollows")
  following     User[]          @relation("UserFollows")

 
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

enum GameType {
  CashGame
  Tournament
}

enum Limit {
  NoLimit
  Limit
}

enum Blinds {
  SB_010_BB_020
  SB_025_BB_050
  SB_050_BB_100
  SB_100_BB_200
}